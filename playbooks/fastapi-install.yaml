---
- hosts: webserver

  vars:
    app_dir: "{{user_dir}}/distributed-backend"
    git_repo_url: "https://github.com/jgenc/hua-distributed-project-backend"
    git_repo_branch: "main"

  tasks:

  - name: ensure github.com is a known host
    lineinfile:
      dest: "{{user_dir}}/.ssh/known_hosts"
      create: yes
      state: present
      line: "{{lookup('pipe', 'ssh-keyscan -t rsa github.com')}}"
      regexp: "^github\\.com"
    ignore_errors: true

  - name: clone project
    git:
      repo: "{{git_repo_url}}"
      version: "{{git_repo_branch}}"
      clone: yes
      force: yes
      dest: "{{app_dir}}"
    changed_when: true

  - name: copy env file
    shell : "cp {{app_dir}}/.env.example {{app_dir}}/.env"


  - name: Check if docker-compose exists
    stat:
      path: "{{ app_dir }}/dokcer-compose.yaml"
    register: docker_compose_file

  # - debug:
  #     msg: "docker_compose_file variable: {{ docker_compose_file }}"

  # - name: build and run an image
  #   block:
  #   - name: build container image
  #     docker_image:
  #       name: distributed-backend:latest
  #       build:
  #         path: "{{app_dir}}"
  #       source: build
  #       state: present
  #
  #   - name: Start a container with a command
  #     docker_container:
  #       name: distributed-backend 
  #       image: distributed-backend:latest
  #       #command: ["sleep", "infinity"]
  #       env_file: "{{app_dir}}/.env"
  #   when: docker_compose_file.stat.exists == False

  - name: run docker docker-compose
    # block:
    #   - name: Run `docker-compose up`
    docker_compose:
      project_src: "{{app_dir}}"
      build: yes
    register: output

      # - debug:
      #     var: output

    # when: docker_compose_file.stat.exists == True
